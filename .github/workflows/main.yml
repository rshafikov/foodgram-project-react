name: foodgram

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Dependecies and tests
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt
        python -m flake8

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      if: github.ref == 'refs/heads/master'
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }} 
            password: ${{ secrets.DOCKER_PASSWORD }} 
        - name: Push to Docker Hub
          uses: docker/build-push-action@v3
          with:
            context: backend
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.HOST_SSH_KEY }}
          script: |
            sudo docker compose stop
            sudo docker compose rm backend
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker compose up -d
            # sudo docker compose exec backend python3 manage.py migrate
            sudo docker compose exec backend python3 manage.py collectstatic

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_MY_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: test of ${{ github.workflow }} created by ${{ github.actor }}
